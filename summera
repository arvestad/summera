#! /usr/bin/env python

import sys
import re
import argparse

def count_points(h, show_points=False):
    points = 0
    fraga_points = 0
    fraga_number = 1
    line_no=0
    grade_info = {'A': 0, 'B': 0, 'C': 0, 'D': 0, 'E': 0}
    
    for line in h:
        line_no += 1
        match_fraga = re.search(r"^\s*\\fraga.*", line)
        match_point = re.search(r"(\\poang|\\points)\{(\d+)\}", line)

        if match_fraga and show_points:
            if fraga_points:
                print(f'\t\tAssignment points: {fraga_points}')
                fraga_points = 0
            print('Assignment', fraga_number)
            fraga_number += 1
        elif match_point:
            p = match_point.group(2)  # Extract the points substring
            try:
                partial_p = int(p)
                points += partial_p
                fraga_points += partial_p

                match_grade  = re.search(r"(\\poang|\\points)\{\d+\}\s*\%\s*([AaBbCcDdEe])", line)
                if match_grade:
                    grade = match_grade[2].upper()
                    grade_info[grade] += partial_p
                
                if show_points:
                    print(f'Line {line_no}:{p:>3}')
            except Exception as e:
                print('Could not parse points on line', line_no, ' in input:\n', line, '\n', e, file=sys.stderr)


    if match_fraga and show_points:
        if fraga_points:
            print(f'\t\tAssignment points: {fraga_points}')
    return points, grade_info

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('infile', type=argparse.FileType('r'), help='A LaTeX file containing  macros like "\poang{2}".')
    parser.add_argument('-v', '--verbose', action='store_true',
                        help='Show all points as they are found.')
    args= parser.parse_args()

    total, grade_info = count_points(args.infile, args.verbose)
    print('Exam total:', total)
    print('\nGrade  Points (%)')
    for grade, points in grade_info.items():
        print(f'{grade:^6} {points:4} ({100*points/total:4.1f})')


if __name__ == '__main__':
    main()
