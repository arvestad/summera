#! /usr/bin/env python

import sys
import re
import argparse

def count_points(h, show_points=False):
    points = 0
    line_no=0
    for line in h:
        line_no += 1
        match_fraga = re.search(r"^\s*\\fraga.*", line)
        match_point = re.search(r"(\\poang|\\points)\{(\d+)\}", line)

        if match_fraga and show_points:
            print('FrÃ¥ga')
        elif match_point:
            p = match_point.group(2)  # Extract the points substring
            try:
                points += int(p)
                if show_points:
                    print(f'Line {line_no}:{p:>3}')
            except Exception as e:
                print('Could not parse points on line', line_no, ' in input:\n', line, '\n', e, file=sys.stderr)
    return points

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('infile', type=argparse.FileType('r'), help='A LaTeX file containing  macros like "\poang{2}".')
    parser.add_argument('-v', '--verbose', action='store_true',
                        help='Show all points as they are found.')
    args= parser.parse_args()

    x = count_points(args.infile, args.verbose)
    print(x)


if __name__ == '__main__':
    main()
